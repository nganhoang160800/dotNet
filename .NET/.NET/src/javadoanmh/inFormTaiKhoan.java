/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javadoanmh;

import Bussiness.BNhanVien;
import Bussiness.BTaiKhoanNV;
import Bussiness.BTaiKhoanTV;
import Bussiness.BThanhVien;
import Bussiness.Bussiness;
import Item.itemTaiKhoan;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author lvdinh
 */
public class inFormTaiKhoan extends javax.swing.JInternalFrame {
    // ArrayList<Object> ls = new ArrayList<>();

    /**
     * Creates new form internalFrameNV
     */
    ArrayList<Object> ls = new ArrayList<>();
    ArrayList<String> listCombItem=new ArrayList<>();
    public inFormTaiKhoan() {
        initComponents();

        textMatKhau.setEnabled(false);
        textNhapLaiMatKhau.setEnabled(false);
        // labelLoiID.setEnabled(false);
        // labelLoiMatKhau.setEnabled(false);
        // labelLoiNhapLaiMatKhau.setEnabled(false);

        textTimKiem.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void removeUpdate(DocumentEvent e) {
                //System.out.println("removeUpdate");
                buttonTimKiemActionPerformed(null);
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                //System.out.println("insertUpdate");
                buttonTimKiemActionPerformed(null);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                //System.out.println("changedUpdate");
                buttonTimKiemActionPerformed(null);
            }
        });
    }
    public inFormTaiKhoan(java.awt.event.ActionEvent evt) {
        initComponents();

        textMatKhau.setEnabled(false);
        textNhapLaiMatKhau.setEnabled(false);
        if(evt.getActionCommand().equals("Them"))
        {
            buttonThemActionPerformed(evt);
        }
        // labelLoiID.setEnabled(false);
        // labelLoiMatKhau.setEnabled(false);
        // labelLoiNhapLaiMatKhau.setEnabled(false);
        this.setVisible(true);

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonLamMoi = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        textTimKiem = new javax.swing.JTextField();
        buttonTimKiem = new javax.swing.JButton();
        tabTaiKhoan = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableTaiKhoanTV = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTaiKhoanNV = new javax.swing.JTable();
        panelNhanVien = new javax.swing.JPanel();
        textNhapLaiMatKhau = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        buttonHuy = new javax.swing.JButton();
        buttonSua = new javax.swing.JButton();
        labelLoiID = new javax.swing.JLabel();
        labelLoiNhapLaiMatKhau = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonXoa = new javax.swing.JButton();
        labelMaTaiKhoan = new javax.swing.JLabel();
        combMaTaiKhoan = new javax.swing.JComboBox();
        buttonThem = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        textMatKhau = new javax.swing.JPasswordField();
        buttonChiTiet = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();

        setClosable(true);
        setTitle("Tài khoản");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Actions-user-group-properties-icon.png"))); // NOI18N
        setName("TaiKhoan"); // NOI18N
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        buttonLamMoi.setText("Làm mới");
        buttonLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLamMoiActionPerformed(evt);
            }
        });

        jLabel6.setText("Tìm kiếm");

        textTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTimKiemActionPerformed(evt);
            }
        });
        textTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textTimKiemKeyPressed(evt);
            }
        });

        buttonTimKiem.setText("Tìm");
        buttonTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTimKiemActionPerformed(evt);
            }
        });

        tabTaiKhoan.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabTaiKhoanStateChanged(evt);
            }
        });

        jScrollPane3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane3KeyPressed(evt);
            }
        });

        tableTaiKhoanTV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Tên tài khoản (Mã thành viên)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTaiKhoanTV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTaiKhoanTVMouseClicked(evt);
            }
        });
        tableTaiKhoanTV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableTaiKhoanTVKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tableTaiKhoanTV);

        tabTaiKhoan.addTab("Thành viên", jScrollPane3);

        jScrollPane2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane2KeyPressed(evt);
            }
        });

        tableTaiKhoanNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Tên tài khoản (Mã nhân viên)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTaiKhoanNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTaiKhoanNVMouseClicked(evt);
            }
        });
        tableTaiKhoanNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableTaiKhoanNVKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tableTaiKhoanNV);

        tabTaiKhoan.addTab("Nhân viên", jScrollPane2);

        textNhapLaiMatKhau.setEnabled(false);
        textNhapLaiMatKhau.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textNhapLaiMatKhauFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textNhapLaiMatKhauFocusLost(evt);
            }
        });
        textNhapLaiMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textNhapLaiMatKhauKeyPressed(evt);
            }
        });

        jLabel5.setText("Mật khẩu");

        buttonHuy.setText("Hủy");
        buttonHuy.setActionCommand("Huy");
        buttonHuy.setEnabled(false);
        buttonHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHuyActionPerformed(evt);
            }
        });

        buttonSua.setText("Sửa");
        buttonSua.setActionCommand("Sua");
        buttonSua.setEnabled(false);
        buttonSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSuaActionPerformed(evt);
            }
        });

        labelLoiID.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        labelLoiID.setForeground(new java.awt.Color(204, 0, 0));
        labelLoiID.setText("Chọn nhân viên cần tạo tài khoản hoặc sửa");

        labelLoiNhapLaiMatKhau.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        labelLoiNhapLaiMatKhau.setForeground(new java.awt.Color(204, 0, 0));

        jLabel2.setText("Nhập lại mật khẩu");

        buttonXoa.setText("Xóa");
        buttonXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonXoaActionPerformed(evt);
            }
        });

        labelMaTaiKhoan.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelMaTaiKhoan.setText("Mã nhân viên");

        combMaTaiKhoan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        combMaTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combMaTaiKhoanActionPerformed(evt);
            }
        });

        buttonThem.setText("Thêm");
        buttonThem.setActionCommand("Them");
        buttonThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonThemActionPerformed(evt);
            }
        });
        buttonThem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonThemKeyPressed(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        textMatKhau.setEnabled(false);
        textMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMatKhauActionPerformed(evt);
            }
        });
        textMatKhau.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textMatKhauFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textMatKhauFocusLost(evt);
            }
        });
        textMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textMatKhauKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelNhanVienLayout = new javax.swing.GroupLayout(panelNhanVien);
        panelNhanVien.setLayout(panelNhanVienLayout);
        panelNhanVienLayout.setHorizontalGroup(
            panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNhanVienLayout.createSequentialGroup()
                .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelNhanVienLayout.createSequentialGroup()
                            .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelMaTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelNhanVienLayout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel5)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textMatKhau)
                                .addComponent(combMaTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNhanVienLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNhanVienLayout.createSequentialGroup()
                                    .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(buttonThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(buttonXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(buttonSua, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(buttonHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNhanVienLayout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(textNhapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNhanVienLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelLoiID)
                        .addGap(8, 8, 8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelLoiNhapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelNhanVienLayout.setVerticalGroup(
            panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNhanVienLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelLoiNhapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelNhanVienLayout.createSequentialGroup()
                        .addComponent(labelLoiID, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMaTaiKhoan)
                            .addComponent(combMaTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textNhapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addComponent(buttonXoa)
                        .addGap(18, 18, 18)
                        .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonThem)
                            .addComponent(buttonSua))
                        .addGap(18, 18, 18)
                        .addGroup(panelNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonHuy)
                            .addComponent(jButton1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonChiTiet.setText("Chi tiết");
        buttonChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChiTietActionPerformed(evt);
            }
        });

        buttonReset.setText("Reset!");
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(textTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonLamMoi))
                    .addComponent(tabTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(buttonChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLamMoi)
                    .addComponent(buttonTimKiem)
                    .addComponent(textTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(buttonChiTiet)
                    .addComponent(buttonReset))
                .addGap(15, 15, 15))
        );

        getAccessibleContext().setAccessibleName("TaiKhoan");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void displayData(ResultSet rs) {
        int index = tabTaiKhoan.getSelectedIndex();
        ls.clear();
        DefaultTableModel model;
        if(index==1){
            model = (DefaultTableModel) tableTaiKhoanNV.getModel();
        }
        else{
            model = (DefaultTableModel) tableTaiKhoanTV.getModel();
        }
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {

            while (rs.next()) {
                if(index==1){
                    itemTaiKhoan item = new itemTaiKhoan(rs.getString("MaNhanVien"), rs.getString("MatKhauNhanVien"));
                    ls.add(item);
                    model.addRow(new Object[]{item.getID(), ""});
                }
                else{
                    model.addRow(new Object[]{rs.getString("MaThanhVien")});
                }
                //MD5.MD5Code(new String(item.getPassword()))
                // tableNV.setModel(model);
            }
        } catch (Exception ex) {
            System.out.printf("Ngoại lệ tại displayData: " + ex.getMessage());
        }
    }
    private void buttonLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLamMoiActionPerformed
        // TODO add your handling code here:
        Bussiness BSN;
        
        System.out.println("[Làm mới] Loading data from TaiKhoan...");
        if(tabTaiKhoan.getSelectedIndex()==1){
            loadCombBox();
            BSN=new BTaiKhoanNV();
        }
        else
            BSN=new BTaiKhoanTV();
        ResultSet rs = BSN.getAll();
        displayData(rs);
        loadCombBox();
    }//GEN-LAST:event_buttonLamMoiActionPerformed

    private void textMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMatKhauActionPerformed

    private void textTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTimKiemActionPerformed

    private void buttonXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXoaActionPerformed
        // TODO add your handling code here:

        int index = tableTaiKhoanNV.getSelectedRow();
        if(tableTaiKhoanNV.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 dòng có dữ liệu","Không có dữ liệu để xóa!", JOptionPane.INFORMATION_MESSAGE);
        }
        String id = ((itemTaiKhoan) (ls.get(index))).getID();
        if (index>=0) {
            if (0 == JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa?", "Xóa???", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE)) {
                BTaiKhoanNV BTKNV=new BTaiKhoanNV();
                if(BTKNV.deleteByID(id)){
                    JOptionPane.showMessageDialog(this, "Xóa thành công!", "Đã xóa!", JOptionPane.INFORMATION_MESSAGE);
                    buttonLamMoiActionPerformed(evt);
                }  
                else{
                    JOptionPane.showMessageDialog(this, "Có lỗi trong khi xóa!", "Đã xóa!", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_buttonXoaActionPerformed

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        int index = tableTaiKhoanNV.getSelectedRow();
        if(index<0){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 dòng có dữ liệu","Không có dữ liệu để Reset mật khẩu!", JOptionPane.INFORMATION_MESSAGE);
        }
        String id = ((itemTaiKhoan) (ls.get(index))).getID();
        if (index>=0) {
            if (0 == JOptionPane.showConfirmDialog(this, "Bạn có muốn reset mật khẩu về mặc định","Reset mật khẩu về mặc định???", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE)) {
                BTaiKhoanNV BTKNV=new BTaiKhoanNV();
                String mk="123456";
                if(BTKNV.updateByProperties(id, Encrypt.MD5.getMD5CodeOf(mk))){
                    JOptionPane.showMessageDialog(this, "Reset thành công!", "Đã reset!", JOptionPane.INFORMATION_MESSAGE);
                    buttonLamMoiActionPerformed(evt);
                }  
                else{
                    JOptionPane.showMessageDialog(this, "Có lỗi trong khi reset!", "Lỗi reset!", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_buttonResetActionPerformed
    public void pressThem(java.awt.event.ActionEvent evt){
   
        buttonThemActionPerformed(evt);
    }
    private void backupcode(){
//        System.out.println("ACtion command la: "+(evt.getActionCommand()).toString());//
//        boolean isSua = false;
//        if (buttonSua.equals(((JButton)(evt.getSource())))) {
//            isSua = true;
//        }
//        if (((JButton)(evt.getSource())).getActionCommand().equals("Them") || ((JButton)(evt.getSource())).getActionCommand().equals("Sua")) {
//            if (!isSua) {
//                buttonSua.setEnabled(false);
//                System.out.println("Thêm->Add");
//                buttonThem.setActionCommand("Add");
//                textTaiKhoan.requestFocus();
//                textTaiKhoan.setText("");
//                textTaiKhoan.setEnabled(true);
//                
//            } else {
//                buttonThem.setEnabled(false);
//                if(textTaiKhoan.getText().isEmpty()){
//                    JOptionPane.showMessageDialog(this, "vui lòng chọn 1 dòng có dữ liệu!", "Chưa chọn dòng!", JOptionPane.OK_OPTION);
//                    return;
//                }
//                System.out.println("Sua->Update");
//                buttonSua.setActionCommand("Update");
//                textMatKhau.requestFocus();
//            }
//            textMatKhau.setText("");
//            textNhapLaiMatKhau.setText("");
//            textMatKhau.setEnabled(true);
//            textNhapLaiMatKhau.setEnabled(true);
//            
//            
//        } else {
//            String MK = new String(textMatKhau.getPassword());
//            String MK2 = new String(textNhapLaiMatKhau.getPassword());
//            if (textTaiKhoan.getText().isEmpty() && !isSua) {
//                labelLoiID.setText("Chưa nhập ID!");
//                textTaiKhoan.requestFocus();
//                return;
//            }
//            if (MK.isEmpty()) {
//                labelLoiMatKhau.setText("Chưa nhập mật khẩu!");
//                textMatKhau.requestFocus();
//                return;
//            }
//
//            if (MK2.isEmpty()) {
//                labelLoiNhapLaiMatKhau.setText("Vui lòng nhập lại mật khẩu!");
//                textNhapLaiMatKhau.requestFocus();
//                return;
//            }
//
//            if (!MK.equals(MK2)) {
//                labelLoiNhapLaiMatKhau.setText("Nhập lại chưa chính xác!");
//                textNhapLaiMatKhau.requestFocus();
//                return;
//            }
//            BTaiKhoanNV BTKNV=new BTaiKhoanNV();
//            if (isSua) {
//                if(BTKNV.update(textTaiKhoan.getText(), MK)){
//                    JOptionPane.showMessageDialog(this, "Chỉnh sửa mật khẩu thành công!", "Đã sửa", JOptionPane.INFORMATION_MESSAGE);
//                    buttonThem.setEnabled(true);
//                    buttonLamMoiActionPerformed(evt);
//                    System.out.println("Update->Sua");
//                    buttonSua.setActionCommand("Sua");
//                }
//                
//            } else {
//                if(BTKNV.insert(textTaiKhoan.getText(), MK)){
//                    JOptionPane.showMessageDialog(this, "Thêm tài khoản mới thành công!", "Đã thêm", JOptionPane.INFORMATION_MESSAGE);
//                    buttonSua.setEnabled(true);
//                    buttonLamMoiActionPerformed(evt);
//                    System.out.println("Add->Them");
//                    buttonThem.setActionCommand("Them");
//                }
//            }
//            textTaiKhoan.setEnabled(false);
//            textMatKhau.setEnabled(false);
//            textNhapLaiMatKhau.setEnabled(false);
//        }
    }
    private void loadCombBox(){
        combMaTaiKhoan.removeAllItems();
        listCombItem.clear();
        combMaTaiKhoan.addItem("");
        listCombItem.add("");
        if(tabTaiKhoan.getSelectedIndex()==1){
            
            BNhanVien BNV = new BNhanVien();
            ResultSet rs = BNV.getMaNhanVienChuaLapTaiKhoan();
            try {
                while(rs.next()){
                combMaTaiKhoan.addItem(rs.getString("MaNhanVien"));
                listCombItem.add(rs.getString("MaNhanVien"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(inFormNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Lỗi load comboBox TaiKhoan! "+ex.getMessage());  
            }
        }
        else{
            BThanhVien BTV = new BThanhVien();
            ResultSet rs = BTV.getAll(); ///
            try {
                while(rs.next()){
                combMaTaiKhoan.addItem(rs.getString("MaThanhVien"));
                listCombItem.add(rs.getString("MaThanhVien"));
            }
                //
            } catch (SQLException ex) {
                Logger.getLogger(inFormNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Lỗi load comboBox TaiKhoan! "+ex.getMessage());  
            }
        }
    }
    private void buttonThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonThemActionPerformed
        if(combMaTaiKhoan.getSelectedItem().toString().equals("")){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một mã nhân viên hoặc bấm \"Làm mới\" để cập nhật lại!","Mã nhân viên rỗng!", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            BTaiKhoanNV BTKNV = new BTaiKhoanNV();
            String mk="123456";
            if(BTKNV.insertByProperties(combMaTaiKhoan.getSelectedItem().toString(), Encrypt.MD5.getMD5CodeOf(mk))){
                buttonLamMoiActionPerformed(evt);
                   JOptionPane.showMessageDialog(this, "Thêm thành công!", "Đã thêm", JOptionPane.INFORMATION_MESSAGE);
            }
            else
                JOptionPane.showMessageDialog(this, "Có lỗi khi thêm!","Chưa thêm", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_buttonThemActionPerformed

    private void textMatKhauFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textMatKhauFocusLost
        // TODO add your handling code here:
        if (new String(textMatKhau.getPassword()).isEmpty()) {

        }
    }//GEN-LAST:event_textMatKhauFocusLost

    private void textMatKhauFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textMatKhauFocusGained

        labelLoiNhapLaiMatKhau.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_textMatKhauFocusGained

    private void textNhapLaiMatKhauFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textNhapLaiMatKhauFocusLost
        if (new String(textNhapLaiMatKhau.getPassword()).isEmpty()) {
            labelLoiNhapLaiMatKhau.setText("Vui lòng nhập lại mật khẩu!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_textNhapLaiMatKhauFocusLost

    private void textNhapLaiMatKhauFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textNhapLaiMatKhauFocusGained
        // TODO add your handling code here:
        //labelLoiNhapLaiMatKhau.setText("");
    }//GEN-LAST:event_textNhapLaiMatKhauFocusGained

    private void buttonSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSuaActionPerformed
        // TODO add your handling code here:
       // buttonThemActionPerformed(evt);
    }//GEN-LAST:event_buttonSuaActionPerformed

    private void buttonHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHuyActionPerformed
        // TODO add your handling code here:
        //buttonThemActionPerformed(evt);
        inFormTaiKhoan O = new inFormTaiKhoan();
        O.setVisible(true);
        O.buttonLamMoiActionPerformed(evt);
        this.getParent().add(O);
        this.dispose();
    }//GEN-LAST:event_buttonHuyActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        System.out.println(KeyEvent.getKeyText(evt.getKeyCode()) + " is pressed!");
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
            //buttonOKActionPerformed(null);                           
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void buttonTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTimKiemActionPerformed
        // TODO add your handling code here:
//        String s=textTimKiem.getText();
//        if(!s.isEmpty()){
//            classBussinessTaiKhoan classBTK =new classBussinessTaiKhoan();
//            ResultSet rs=classBTK.searchByID(s);
//            displayData(rs);
//        }
    }//GEN-LAST:event_buttonTimKiemActionPerformed

    private void textTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTimKiemKeyPressed
        // TODO add your handling code here:
        int index=evt.getKeyCode();
        if(index==KeyEvent.VK_ENTER){
            buttonTimKiemActionPerformed(null);
        }
    }//GEN-LAST:event_textTimKiemKeyPressed

    private void textMatKhauKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textMatKhauKeyPressed
        // TODO add your handling code here:
        int index=evt.getKeyCode();
        if(index==KeyEvent.VK_ENTER || index==KeyEvent.VK_TAB){
            textNhapLaiMatKhau.requestFocus();
        }
        
    }//GEN-LAST:event_textMatKhauKeyPressed
    private void bamNutSua(){
        buttonSuaActionPerformed(null);
    }
    private void textNhapLaiMatKhauKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNhapLaiMatKhauKeyPressed
        // TODO add your handling code here:
        
        if(!(new String(textNhapLaiMatKhau.getPassword()).isEmpty()))
                if(evt.getKeyCode()==KeyEvent.VK_ENTER){
               // buttonThemActionPerformed(evt);
        }
    }//GEN-LAST:event_textNhapLaiMatKhauKeyPressed

    private void buttonThemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonThemKeyPressed
        // TODO add your handling code here:
        bamNutSua();
    }//GEN-LAST:event_buttonThemKeyPressed

    private void buttonChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChiTietActionPerformed
        // TODO add your handling code here:
        if(tableTaiKhoanNV.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "vui lòng chọn 1 dòng có dữ liệu!", "Chưa chọn dòng!", JOptionPane.OK_OPTION);
        }
        else{

        int index = tableTaiKhoanNV.getSelectedRow();
        String id = ((itemTaiKhoan)ls.get(index)).getID().toString();
        inFormNhanVien.textTimKiem.setText(id);
        formMain.informNguoiDung.setVisible(true);
        this.setVisible(false);
        }
    }//GEN-LAST:event_buttonChiTietActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jScrollPane2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2KeyPressed

    private void tableTaiKhoanNVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableTaiKhoanNVKeyPressed
        System.out.println(KeyEvent.getKeyText(evt.getKeyCode()) + " is pressed!");
        if (evt.getKeyCode() == KeyEvent.VK_DELETE || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            buttonXoaActionPerformed(null);
            //buttonOKActionPerformed(null);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tableTaiKhoanNVKeyPressed

    private void tableTaiKhoanNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTaiKhoanNVMouseClicked
//        int index = tableTaiKhoanNV.getSelectedRow();
//        if (index >= 0) {
//            textMatKhau.setEnabled(true);
//            textNhapLaiMatKhau.setEnabled(true);
//            textTaiKhoan.setText(((itemTaiKhoan) ls.get(index)).getID().toString());
//        }
    }//GEN-LAST:event_tableTaiKhoanNVMouseClicked

    private void tableTaiKhoanTVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTaiKhoanTVMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableTaiKhoanTVMouseClicked

    private void tableTaiKhoanTVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableTaiKhoanTVKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableTaiKhoanTVKeyPressed

    private void jScrollPane3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane3KeyPressed

    private void tabTaiKhoanStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabTaiKhoanStateChanged
        // TODO add your handling code here:
        if(tabTaiKhoan.getSelectedIndex()==0){
            panelNhanVien.setVisible(false);
        }
        else panelNhanVien.setVisible(true);
    }//GEN-LAST:event_tabTaiKhoanStateChanged

    private void combMaTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combMaTaiKhoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combMaTaiKhoanActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonChiTiet;
    private javax.swing.JButton buttonHuy;
    private javax.swing.JButton buttonLamMoi;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonSua;
    private javax.swing.JButton buttonThem;
    private javax.swing.JButton buttonTimKiem;
    private javax.swing.JButton buttonXoa;
    private javax.swing.JComboBox combMaTaiKhoan;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelLoiID;
    private javax.swing.JLabel labelLoiNhapLaiMatKhau;
    private javax.swing.JLabel labelMaTaiKhoan;
    private javax.swing.JPanel panelNhanVien;
    private javax.swing.JTabbedPane tabTaiKhoan;
    private javax.swing.JTable tableTaiKhoanNV;
    private javax.swing.JTable tableTaiKhoanTV;
    private javax.swing.JPasswordField textMatKhau;
    private javax.swing.JPasswordField textNhapLaiMatKhau;
    private javax.swing.JTextField textTimKiem;
    // End of variables declaration//GEN-END:variables
}
