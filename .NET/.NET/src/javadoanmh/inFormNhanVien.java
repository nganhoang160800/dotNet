/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javadoanmh;

import Bussiness.BChucVu;
import Bussiness.BLoaiThanhVien;
import Bussiness.BNhanVien;
import Bussiness.BThanhVien;
import Item.itemNhanVien;
import java.util.ArrayList;
import Item.itemThanhVien;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lvdinh
 */
public class inFormNhanVien extends javax.swing.JInternalFrame {

    /**
     * Creates new form internalFrameNhanVien
     */
    ArrayList<itemNhanVien> lsNV = new ArrayList<>();
    ArrayList<itemThanhVien> lsTV = new ArrayList<>();
    ArrayList<String> listCombItem = new ArrayList<>();

    public inFormNhanVien() {
        initComponents();
        tabThanhVien.setSelectedIndex(1);
        buttonLamMoiActionPerformed(null);
        loadCombBox();
    }

    public inFormNhanVien(String id) {
        initComponents();
        this.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        tabThanhVien = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableThanhVien = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        textTimKiem = new javax.swing.JTextField();
        buttonTimKiem = new javax.swing.JButton();
        buttonLamMoi = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableNhanVien = new javax.swing.JTable();
        buttonOK = new javax.swing.JButton();
        buttonThem = new javax.swing.JButton();
        textNgaySinh = new javax.swing.JFormattedTextField();
        buttonXoa = new javax.swing.JButton();
        buttonLuu = new javax.swing.JButton();
        textMaNhanVien = new javax.swing.JTextField();
        buttonClear = new javax.swing.JButton();
        textTen = new javax.swing.JTextField();
        radNu = new javax.swing.JRadioButton();
        radNam = new javax.swing.JRadioButton();
        textDienThoai = new javax.swing.JTextField();
        textDiaChi = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        textGhiChu = new javax.swing.JTextArea();
        textEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        labelChucVu_LoaiTV = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labelMaNhanVien_MaTV = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        combChucVu = new javax.swing.JComboBox();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Nhân viên và thành viên");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Groups-Meeting-Dark-icon.png"))); // NOI18N
        setName("NhanVien"); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        tabThanhVien.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabThanhVienStateChanged(evt);
            }
        });
        tabThanhVien.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tabThanhVienComponentShown(evt);
            }
        });

        tableThanhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Loại thành viên", "Mã thành viên", "Họ tên", "Ngày sinh", "Giới tính", "Địa chỉ", "Số điện thoại", "Email", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableThanhVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableThanhVienMouseClicked(evt);
            }
        });
        tableThanhVien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableThanhVienKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(tableThanhVien);

        jLabel9.setText("Tìm kiếm");

        textTimKiem.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                textTimKiemInputMethodTextChanged(evt);
            }
        });
        textTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textTimKiemKeyPressed(evt);
            }
        });

        buttonTimKiem.setText("Tìm");
        buttonTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTimKiemActionPerformed(evt);
            }
        });

        buttonLamMoi.setText("Làm mới");
        buttonLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(textTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(buttonTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125)
                .addComponent(buttonLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 985, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonTimKiem)
                    .addComponent(buttonLamMoi)
                    .addComponent(textTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        tabThanhVien.addTab("Thành viên", jPanel2);

        tableNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Chức vụ", "Mã nhân viên", "Họ tên", "Ngày sinh", "Giới tính", "Địa chỉ", "Số điện thoại", "Email", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableNhanVienMouseClicked(evt);
            }
        });
        tableNhanVien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableNhanVienKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tableNhanVien);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
        );

        tabThanhVien.addTab("Nhân viên", jPanel1);

        buttonOK.setText("OK");
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });

        buttonThem.setText("Thêm");
        buttonThem.setActionCommand("Them");
        buttonThem.setName("Them"); // NOI18N
        buttonThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonThemActionPerformed(evt);
            }
        });

        textNgaySinh.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("d/M/y"))));
        textNgaySinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNgaySinhActionPerformed(evt);
            }
        });

        buttonXoa.setText("Xóa");
        buttonXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonXoaActionPerformed(evt);
            }
        });

        buttonLuu.setText("Lưu");
        buttonLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLuuActionPerformed(evt);
            }
        });

        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        buttonGroup1.add(radNu);
        radNu.setText("Nữ");

        buttonGroup1.add(radNam);
        radNam.setText("Nam");

        textGhiChu.setColumns(20);
        textGhiChu.setRows(5);
        jScrollPane2.setViewportView(textGhiChu);

        jLabel6.setText("Số điện thoại");

        jLabel5.setText("Địa chỉ");

        jLabel8.setText("Ghi chú");

        labelChucVu_LoaiTV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelChucVu_LoaiTV.setText("Chức vụ");

        jLabel10.setText("Email");

        labelMaNhanVien_MaTV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelMaNhanVien_MaTV.setText("Mã nhân viên");
        labelMaNhanVien_MaTV.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel2.setText("Họ tên");

        jLabel3.setText("Ngày sinh");

        jLabel4.setText("Giới tính");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelChucVu_LoaiTV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelMaNhanVien_MaTV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonThem, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(buttonLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(buttonXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(buttonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textMaNhanVien)
                            .addComponent(textTen)
                            .addComponent(textNgaySinh)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radNam)
                                .addGap(18, 18, 18)
                                .addComponent(radNu))
                            .addComponent(combChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textDiaChi)
                                .addComponent(textDienThoai)
                                .addComponent(textEmail)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
                            .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(289, 289, 289))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addComponent(tabThanhVien)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabThanhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelChucVu_LoaiTV)
                            .addComponent(combChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMaNhanVien_MaTV))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radNam)
                            .addComponent(jLabel4)
                            .addComponent(radNu))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonOK)
                    .addComponent(buttonXoa)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonThem)
                        .addComponent(buttonLuu)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("NhanVien");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void loadCombBox() {
        combChucVu.removeAllItems();
        listCombItem.clear();
        int index = tabThanhVien.getSelectedIndex();
        if (index == 1) {

            BChucVu BSN = new BChucVu();
            ResultSet rs = BSN.getAll();
            try {
                while (rs.next()) {
                    combChucVu.addItem(rs.getString("TenChucVu"));
                    listCombItem.add(rs.getString("TenChucVu"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(inFormNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Lỗi load comboBox! " + ex.getMessage());
            }
        } else {
            BLoaiThanhVien BSN = new BLoaiThanhVien();
            ResultSet rs = BSN.getAll();
            try {
                while (rs.next()) {
                    combChucVu.addItem(rs.getString("TenLoaiThanhVien"));
                    listCombItem.add(rs.getString("TenLoaiThanhVien"));
                }
                //
            } catch (SQLException ex) {
                Logger.getLogger(inFormNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Lỗi load comboBox! " + ex.getMessage());
            }
        }
    }

    private void displayData(ResultSet rs) {
        int index = tabThanhVien.getSelectedIndex();
        if (index == 1) {
            lsNV.clear();
            DefaultTableModel model;
            model = (DefaultTableModel) tableNhanVien.getModel();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            try {
                while (rs.next()) {
                    itemNhanVien item = new itemNhanVien(rs.getString("TenChucVu"), rs.getString("MaNhanvien"), rs.getString("TenNhanVien"),
                            rs.getString("NgaySinh"), rs.getBoolean("GioiTinh"), rs.getString("DiaChi"),
                            rs.getString("SDT"), rs.getString("Email"), rs.getString("GhiChu"));
                    lsNV.add(item);

                    Vector vector = new Vector();
                    vector.add(item.getChucVu());
                    vector.add(item.getMaNhanVien());
                    vector.add(item.getTenNhanVien());

                    vector.add(item.getNgaySinh());
                    String gioitinh = item.getGioiTinh().toString();
                    switch (gioitinh.toString()) {
                        case "true":
                            vector.add("Nam");
                            break;
                        case "false":
                            vector.add("Nữ");
                            break;
                        default:
                            vector.add("Khác");
                            break;
                    }

                    vector.add(item.getDiaChi());
                    vector.add(item.getSDT());
                    vector.add(item.getEmail());
                    vector.add(item.getGhiChu());
                    model.addRow(vector);

                }
            } catch (Exception ex) {
                System.out.printf("[Ngoại lệ displayData] " + ex.getMessage());
            }
            System.out.println("Rows loaded: " + lsNV.toArray().length);
        } else {
            lsTV.clear();
            DefaultTableModel model;
            model = (DefaultTableModel) tableThanhVien.getModel();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            try {
                while (rs.next()) {
                    itemThanhVien item = new itemThanhVien(rs.getString("TenLoaiThanhVien"), rs.getString("MaThanhVien"), rs.getString("TenThanhVien"),
                            rs.getString("NgaySinh"), rs.getBoolean("GioiTinh"), rs.getString("DiaChi"),
                            rs.getString("SDT"), rs.getString("Email"), rs.getString("GhiChu"));
                    lsTV.add(item);

                    Vector vector = new Vector();
                    vector.add(item.getTenLoaiThanhVien());
                    vector.add(item.getMaThanhVien());
                    vector.add(item.getTenThanhVien());

                    vector.add(item.getNgaySinh());
                    String gioitinh = item.getGioiTinh().toString();
                    switch (gioitinh.toString()) {
                        case "true":
                            vector.add("Nam");
                            break;
                        case "false":
                            vector.add("Nữ");
                            break;
                        default:
                            vector.add("Khác");
                            break;
                    }

                    vector.add(item.getDiaChi());
                    vector.add(item.getSDT());
                    vector.add(item.getEmail());
                    vector.add(item.getGhiChu());
                    model.addRow(vector);

                }
            } catch (Exception ex) {
                System.out.printf("[Ngoại lệ displayData] " + ex.getMessage());
            }
            System.out.println("Rows loaded: " + lsNV.toArray().length);
        }
    }

    private void textNgaySinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNgaySinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNgaySinhActionPerformed

    private void buttonXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXoaActionPerformed
        if (tabThanhVien.getSelectedIndex() == 1) {
            int index = tableNhanVien.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 dòng có dữ liệu", "Không có dữ liệu!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                BNhanVien BNV = new BNhanVien();
                String manhanvien = lsNV.get(index).getMaNhanVien();
                if (JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa?", "Xóa?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                    if (BNV.deleteByID(manhanvien)) {
                        buttonLamMoiActionPerformed(evt);
                    } else {
                        JOptionPane.showMessageDialog(this, "Có lỗi khi xóa nhân viên!", "Chưa xóa!", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        } else {
            int index = tableThanhVien.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 dòng có dữ liệu", "Không có dữ liệu!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                BThanhVien BTV = new BThanhVien();
                String mathanhvien = lsTV.get(index).getMaThanhVien();
                if (JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa?", "Xóa?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                    if (BTV.deleteByID(mathanhvien)) {
                        JOptionPane.showMessageDialog(this, "Xóa nhân viên thành công!", "Đã xóa", JOptionPane.INFORMATION_MESSAGE);
                        buttonLamMoiActionPerformed(evt);
                    } else {
                        JOptionPane.showMessageDialog(this, "Có lỗi khi xóa nhân viên!", "Chưa xóa!", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonXoaActionPerformed
    private void luuNhanVien() {
        int gt;
        if (radNam.isSelected()) {
            gt = 1;
        } else {
            gt = 0;
        }
        BNhanVien BTCNV = new BNhanVien();
        String loaiTV = combChucVu.getSelectedItem().toString();
        if (BTCNV.updateByProperties(loaiTV, textMaNhanVien.getText(), textTen.getText(), textNgaySinh.getText(), gt, textDiaChi.getText(),
                textDienThoai.getText(), textEmail.getText(), textGhiChu.getText())) {
            System.out.println("Update thành công tại ID: " + textMaNhanVien.getText());
            buttonLamMoiActionPerformed(null);
        } else {
            JOptionPane.showMessageDialog(this, "Có lỗi khi cập nhật!", "Cập nhật", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void luuThanhVien() {
        int gt;
        if (radNam.isSelected()) {
            gt = 1;
        } else {
            gt = 0;
        }
        BThanhVien BTV = new BThanhVien();
        String loaiTV = combChucVu.getSelectedItem().toString();
        if (BTV.updateByProperties(loaiTV, textMaNhanVien.getText(), textTen.getText(), textNgaySinh.getText(), gt, textDiaChi.getText(),
                textDienThoai.getText(), textEmail.getText(), textGhiChu.getText())) {
            System.out.println("Update thành công tại ID: " + textMaNhanVien.getText());
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!", "Cập nhật", JOptionPane.INFORMATION_MESSAGE);
            buttonLamMoiActionPerformed(null);
        } else {
            JOptionPane.showMessageDialog(this, "Có lỗi khi cập nhật!", "Cập nhật", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    private void buttonLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLuuActionPerformed
        // TODO add your handling code here:
        int index = tabThanhVien.getSelectedIndex();
        if (index == 0) {
            index = tableThanhVien.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 dòng có dữ liệu", "Không có dữ liệu!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                luuThanhVien();
            }
        } else {
            index = tableNhanVien.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 dòng có dữ liệu", "Không có dữ liệu!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                luuNhanVien();
            }
        }


    }//GEN-LAST:event_buttonLuuActionPerformed

    private void buttonLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLamMoiActionPerformed
        // TODO add your handling code here:
        buttonClearActionPerformed(evt);
        System.out.println("\n[Làm mới] Loading data... ");
        // Add code to access database here
        int index = tabThanhVien.getSelectedIndex();
        if (index == 1) {
            BNhanVien BNV = new BNhanVien();

            ResultSet rs = BNV.getAll();
            displayData(rs);
        } else {
            BThanhVien BTV = new BThanhVien();

            ResultSet rs = BTV.getAll();
            displayData(rs);
        }
        loadCombBox();
    }//GEN-LAST:event_buttonLamMoiActionPerformed

    private void tableNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableNhanVienMouseClicked
        // TODO add your handling code here:

        buttonClearActionPerformed(null);
        try {
            int index;
            if (tableNhanVien.getRowCount() == 1) {
                index = 0;
            } else {
                index = tableNhanVien.getSelectedRow();
            }
            combChucVu.setSelectedIndex(listCombItem.indexOf(((itemNhanVien) (lsNV.get(index))).getChucVu().toString()));
            textMaNhanVien.setText(((itemNhanVien) (lsNV.get(index))).getMaNhanVien().toString());
            textTen.setText(((itemNhanVien) (lsNV.get(index))).getTenNhanVien().toString());
            textNgaySinh.setText(((itemNhanVien) (lsNV.get(index))).getNgaySinh().toString());
            String gt;
            gt = ((itemNhanVien) (lsNV.get(index))).getGioiTinh().toString();
            System.out.println("Kiểm tra biến boolean gt ở tableNguoiDungMouseClicked():" + gt);
            if (gt == null) {
            //    radKhac.setSelected(true);
                System.out.println("Lỗi! Giới tính bị null! " + gt);
            } else if (gt.equals("true")) {
                radNam.setSelected(true);
                System.out.println("Giới tính: " + gt);
            } else {
                radNu.setSelected(true);
                System.out.println("Giới tính: " + gt);
            }

            textDiaChi.setText(((itemNhanVien) (lsNV.get(index))).getDiaChi().toString());
            textDienThoai.setText(((itemNhanVien) (lsNV.get(index))).getSDT().toString());
            textEmail.setText(((itemNhanVien) (lsNV.get(index))).getEmail().toString());
            textGhiChu.setText(((itemNhanVien) (lsNV.get(index))).getGhiChu().toString());
        } catch (Exception e) {
            System.out.println("Ngoại lệ: " + e.getMessage());
        }

    }//GEN-LAST:event_tableNhanVienMouseClicked

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        textMaNhanVien.setText("");
        textTen.setText("");
        textDiaChi.setText("");
        textNgaySinh.setText("");
        //textChucVu.setText("");
        textGhiChu.setText("");
        textDienThoai.setText("");
        radNam.setSelected(true);
        textEmail.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTimKiemActionPerformed
        String s = textTimKiem.getText();
        if (!s.isEmpty()) {
            ResultSet rs;
            System.out.println("Tìm kiếm [" + s + "] ");
            if (tabThanhVien.getSelectedIndex() == 1) {
                BNhanVien BNV = new BNhanVien();
                rs = BNV.searchAll(s);
            } else {
                BThanhVien BTV = new BThanhVien();
                rs = BTV.searchAll(s);
            }
            displayData(rs);
        }


    }//GEN-LAST:event_buttonTimKiemActionPerformed

    private void textTimKiemInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_textTimKiemInputMethodTextChanged
        // TODO add your handling code here:
        buttonTimKiemActionPerformed(null);
    }//GEN-LAST:event_textTimKiemInputMethodTextChanged

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        System.out.println(KeyEvent.getKeyText(evt.getKeyCode()) + " is pressed!");
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
            //buttonOKActionPerformed(null);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void textTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTimKiemKeyPressed
        int index = evt.getKeyCode();
        if (index == KeyEvent.VK_ENTER) {
            buttonTimKiemActionPerformed(null);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_textTimKiemKeyPressed

    private void tableNhanVienKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableNhanVienKeyPressed
        // TODO add your handling code here:
        int index = evt.getKeyCode();
        if (index == KeyEvent.VK_F5) {
            buttonLamMoiActionPerformed(null);
        }
        if (index == KeyEvent.VK_UP || index == KeyEvent.VK_DOWN) {
            tableNhanVienMouseClicked(null);
        }
    }//GEN-LAST:event_tableNhanVienKeyPressed

    private void buttonThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonThemActionPerformed
        int index = tabThanhVien.getSelectedIndex();
        if (index == 1) {
            if (textMaNhanVien.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mã nhân viên!", "Lỗi!", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("Bi loi nhap lieu khi them: ");
            } else {
                System.out.println("Dang them: ");

                BNhanVien BNV = new BNhanVien();
                int gt;
                if (radNam.isSelected()) {
                    gt = 1;
                } else {
                    gt = 0;
                }
                if (BNV.insertByProperties(combChucVu.getSelectedItem().toString(), textMaNhanVien.getText(),
                        textTen.getText(), textNgaySinh.getText(), gt, textDiaChi.getText(),
                        textDienThoai.getText(), textEmail.getText(), textGhiChu.getText())) {
                    JOptionPane.showMessageDialog(this, "Đã thêm thành công!", "Đã thêm!", JOptionPane.INFORMATION_MESSAGE);
                    buttonLamMoiActionPerformed(evt);
                } else {
                    JOptionPane.showMessageDialog(this, "Có lỗi khi thêm!", "Chưa thêm!", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else if (textMaNhanVien.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã thành viên viên!", "Lỗi!", JOptionPane.INFORMATION_MESSAGE);
            System.out.println("Bi loi nhap lieu khi them: ");
        } else {
            System.out.println("Dang them: ");

            BThanhVien BTV = new BThanhVien();
            int gt;
            if (radNam.isSelected()) {
                gt = 1;
            } else {
                gt = 0;
            }
            if (BTV.insertByProperties(combChucVu.getSelectedItem().toString(), textMaNhanVien.getText(),
                    textTen.getText(), textNgaySinh.getText(), gt, textDiaChi.getText(),
                    textDienThoai.getText(), textEmail.getText(), textGhiChu.getText())) {
                JOptionPane.showMessageDialog(this, "Đã thêm thành công!", "Đã thêm!", JOptionPane.INFORMATION_MESSAGE);
                buttonLamMoiActionPerformed(evt);
            } else {
                JOptionPane.showMessageDialog(this, "Có lỗi khi thêm!", "Chưa thêm!", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_buttonThemActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed
        // TODO add your handling code here:
        this.dispose();
        this.setVisible(false);
    }//GEN-LAST:event_buttonOKActionPerformed

    private void tableThanhVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableThanhVienMouseClicked
        // TODO add your handling code here:
        buttonClearActionPerformed(null);
        try {
            int index;
            if (tableThanhVien.getRowCount() == 1) {
                index = 0;
            } else {
                index = tableThanhVien.getSelectedRow();
            }
            combChucVu.setSelectedIndex(listCombItem.indexOf(((itemThanhVien) (lsTV.get(index))).getTenLoaiThanhVien().toString()));
            textMaNhanVien.setText(((itemThanhVien) (lsTV.get(index))).getMaThanhVien().toString());
            textTen.setText(((itemThanhVien) (lsTV.get(index))).getTenThanhVien().toString());
            textNgaySinh.setText(((itemThanhVien) (lsTV.get(index))).getNgaySinh().toString());
            String gt;
            gt = ((itemThanhVien) (lsTV.get(index))).getGioiTinh().toString();
            System.out.println("Kiểm tra biến boolean gt ở tableNguoiDungMouseClicked():" + gt);
            if (gt == null) {
              //  radKhac.setSelected(true);
                System.out.println("Lỗi! Giới tính bị null! " + gt);
            } else if (gt.equals("true")) {
                radNam.setSelected(true);
                System.out.println("Giới tính: " + gt);
            } else {
                radNu.setSelected(true);
                System.out.println("Giới tính: " + gt);
            }

            textDiaChi.setText(((itemThanhVien) (lsTV.get(index))).getDiaChi().toString());
            textDienThoai.setText(((itemThanhVien) (lsTV.get(index))).getSDT().toString());
            textEmail.setText(((itemThanhVien) (lsTV.get(index))).getEmail().toString());
            textGhiChu.setText(((itemThanhVien) (lsTV.get(index))).getGhiChu().toString());
        } catch (Exception e) {
            System.out.println("Ngoại lệ: " + e.getMessage());
        }
    }//GEN-LAST:event_tableThanhVienMouseClicked

    private void tableThanhVienKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableThanhVienKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tableThanhVienKeyPressed

    private void tabThanhVienStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabThanhVienStateChanged
        buttonClearActionPerformed(null);

        JTabbedPane jtp = (JTabbedPane) (evt.getSource());
        int index = jtp.getSelectedIndex();
        switch (index) {
            case 0:
                labelChucVu_LoaiTV.setText("Loại thành viên");
                labelMaNhanVien_MaTV.setText("Mã thành viên");
                break;
            case 1:
                labelChucVu_LoaiTV.setText("Chức vụ");
                labelMaNhanVien_MaTV.setText("Mã nhân viên");
                break;
        }
        loadCombBox();
        // TODO add your handling code here:
    }//GEN-LAST:event_tabThanhVienStateChanged

    private void tabThanhVienComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tabThanhVienComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_tabThanhVienComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClear;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton buttonLamMoi;
    private javax.swing.JButton buttonLuu;
    private javax.swing.JButton buttonOK;
    private javax.swing.JButton buttonThem;
    private javax.swing.JButton buttonTimKiem;
    private javax.swing.JButton buttonXoa;
    private javax.swing.JComboBox combChucVu;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelChucVu_LoaiTV;
    private javax.swing.JLabel labelMaNhanVien_MaTV;
    private javax.swing.JRadioButton radNam;
    private javax.swing.JRadioButton radNu;
    private javax.swing.JTabbedPane tabThanhVien;
    private javax.swing.JTable tableNhanVien;
    private javax.swing.JTable tableThanhVien;
    private javax.swing.JTextField textDiaChi;
    private javax.swing.JTextField textDienThoai;
    private javax.swing.JTextField textEmail;
    private javax.swing.JTextArea textGhiChu;
    private javax.swing.JTextField textMaNhanVien;
    private javax.swing.JFormattedTextField textNgaySinh;
    private javax.swing.JTextField textTen;
    static javax.swing.JTextField textTimKiem;
    // End of variables declaration//GEN-END:variables
}
